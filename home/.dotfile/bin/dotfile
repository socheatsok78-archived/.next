#!/bin/sh
set -e
source $HOME/.dotfile/zsh.config.d/functions/homebrew.env

#/ Usage: dotfile [<options>] command
#/ dotfile management tool
#/
#/ Options:
#/     --help       Output usage information
#/
#/ Commands:
#/     update       Update dotfile
#/     upgrade      Upgrade dotfile
#/     apply        Apply homebrew template
#/     system       Apply system homebrew template
#/

# First, check if dotfile is installed
if [ ! -d "$DOTFILE_HOME" ]; then
    error "Aborted! dotfile is not installed!"
    exit 1
fi

DOTFILE_LOCAL="$DOTFILE_HOME.local"

test "$1" = "--help" && {
    grep ^#/ <"$0"| cut -c4-
    exit 2
}

test "$1" = "update" && {
    cd "$DOTFILE_HOME"
    DOTFILE_DIRTY=$(git clean -dfn)

    if [ -n "$DOTFILE_DIRTY" ]; then
        warn "Detected a dirty dotfile directory.\ndotfile can not update without removing the following files and folder:"
        echo $DOTFILE_DIRTY

        read -p "Do you wish to clean up dotfile directory (y/n)?" choice
        case "$choice" in
            y|Y|yes|Yes|YES )
                git clean -df
                warn "Successfully clean dotfile directory!"
            ;;
        esac
    fi

    ohai "Updating dotfile..."
    git pull --rebase --stat origin master

    shift
    exit 0
}

test "$1" = "upgrade" && {
    cd "$DOTFILE_LOCAL"
    dotfile update

    ohai "Upgrading dotfile..."
    execute "./setup.sh" "$@"

    shift
    exit 0
}

test "$1" = "apply" && {
    cd $DOTFILE_LOCAL
    templates=($(ls -d lib/homebrew/*.brewfile))

    test "$2" = "" || test "$2" = "--help" && {
        echo "Available homebrew templates:"
        for temp in "${templates[@]}"; do
            template_name=$(basename $temp)
            echo "    - ${template_name%.*}"
        done
        echo "\nExample: dotfile apply applications"
        exit 1
    }

    template_file="./lib/homebrew/$2.brewfile"

    if [ -f "$template_file" ]; then
        ohai "Applying homebrew template: $2"
        brewbundle $template_file
    else
        error "Unable to locate template: $2"
        exit 2
    fi

    shift 2
    exit 0
}

test "$1" = "system" && {
    cd $DOTFILE_LOCAL
    templates=($(ls -d lib/system/*.brewfile))

    test "$2" = "" || test "$2" = "--help" && {
        echo "Available system templates:"
        for temp in "${templates[@]}"; do
            template_name=$(basename $temp)
            echo "    - ${template_name%.*}"
        done
        echo "\nExample: dotfile system socheatsok78"
        exit 1
    }

    template_file="./lib/system/$2.brewfile"

    if [ -f "$template_file" ]; then
        ohai "Applying system template: $2"
        brewbundle $template_file
    else
        error "Unable to locate template: $2"
        exit 2
    fi

    shift 2
    exit 0
}
